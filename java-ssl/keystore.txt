In most cases, we use a keystore and a truststore when our application needs to communicate over SSL/TLS.

Usually, these are password-protected files that sit on the same file system as our running application. The default format used for these files was JKS until Java 8.

Since Java 9, the default keystore format is PKCS12. The biggest difference between JKS and PKCS12 is that JKS is a format specific to Java, while PKCS12 is a standardized and language-neutral way of storing encrypted private keys and certificates.











# generate keystore

$JAVA_HOME/bin/keytool -genkey -alias [youralias] -keyalg RSA -keystore [/preferred/keystore/path]
Use an [alias] and [path] of your choice.

The default keystore will be /root/.keystore




keytool -genkey -alias myjavassl -keyalg RSA -keystore ./myjavassl.keystore -keypass password -storepass password



# example:

# keytool -genkey -alias myjavassl -keyalg RSA -keystore ./myjavassl.keystore -keypass password -storepass password
What is your first and last name?
  [Unknown]:
What is the name of your organizational unit?
  [Unknown]:
What is the name of your organization?
  [Unknown]:
What is the name of your City or Locality?
  [Unknown]:
What is the name of your State or Province?
  [Unknown]:
What is the two-letter country code for this unit?
  [Unknown]:
Is CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 90 days
	for: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown
#

# ls -al
total 12
drwxr-xr-x 2 root root 4096 Jun 29 01:56 .
drwx------ 8 root root 4096 Jun 29 01:08 ..
-rw-r--r-- 1 root root 2750 Jun 29 01:56 myjavassl.keystore
#





# verify the keystore

keytool -list -v
keytool -list -v --key-store myjavassl.keystore
keytool -list -v --key-store myjavassl.keystore -storepass password


# keytool -list -v --key-store myjavassl.keystore
Enter keystore password:
Keystore type: PKCS12
Keystore provider: SUN

Your keystore contains 1 entry

Alias name: myjavassl
Creation date: Jun 29, 2023
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown
Issuer: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown
Serial number: 341bc9b1513c9584
Valid from: Thu Jun 29 01:56:28 UTC 2023 until: Wed Sep 27 01:56:28 UTC 2023
Certificate fingerprints:
	 SHA1: DE:37:83:0C:7B:8C:BC:93:72:D3:DC:A8:93:E4:1A:4D:B0:CC:4F:7F
	 SHA256: 2D:06:E5:AC:7F:9F:B9:A6:51:6F:00:9E:29:83:D3:72:77:C4:C2:21:0B:55:A5:7D:85:AB:F9:AF:37:17:D6:E7
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3

Extensions:

#1: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 75 74 43 79 45 17 4B 46   4E 69 03 65 3B AE CF 47  utCyE.KFNi.e;..G
0010: DD 67 83 E7                                        .g..
]
]



*******************************************
*******************************************


#
#
#


