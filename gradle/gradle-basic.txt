🧱 What the Gradle Wrapper Is

When you create a Gradle project with:

gradle init



├── app
│   ├── build.gradle.kts
│   └── src
│       ├── main
│       │   ├── java
│       │   │   └── org
│       │   │       └── example
│       │   │           └── App.java
│       │   └── resources
│       └── test
│           ├── java
│           │   └── org
│           │       └── example
│           │           └── AppTest.java
│           └── resources
├── gradle
│   ├── libs.versions.toml
│   └── wrapper
│       ├── gradle-wrapper.jar
│       └── gradle-wrapper.properties
├── gradlew
├── gradlew.bat
└── settings.gradle.kts





Gradle automatically generates these wrapper files:

gradlew                 # shell script for Linux/Mac
gradlew.bat             # batch script for Windows
gradle/
 └── wrapper/
     ├── gradle-wrapper.jar
     └── gradle-wrapper.properties





Together, these make up the Gradle Wrapper — it ensures everyone building the project uses the same Gradle version, regardless of what’s installed on their local machine or inside Docker.

⚙️ How It Works

When you run:

./gradlew build


It does the following:

Checks for a local gradle-wrapper.properties file, which specifies a Gradle version, e.g.:

distributionUrl=https\://services.gradle.org/distributions/gradle-8.10.2-bin.zip


Downloads that Gradle version (if not already cached).

Runs it automatically using the gradle-wrapper.jar.
